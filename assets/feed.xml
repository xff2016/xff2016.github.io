<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>X-Flowing | 雪纷飞</title>
    <description>是大地的泪点，使她的微笑保持着青春不谢。</description>
    <link>http://xff2016.top/</link>
    <atom:link href="http://xff2016.top/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 28 Dec 2016 02:04:12 +0800</pubDate>
    <lastBuildDate>Wed, 28 Dec 2016 02:04:12 +0800</lastBuildDate>
    <generator>Jekyll v3.3.1</generator>
    
      <item>
        <title>以传承促发展，共奋斗筑未来</title>
        <description>&lt;h2 id=&quot;前言&quot;&gt;前言：&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;不知从什么时候开始，我们已经无法像孩子一样，肆意大笑。我们急于抵达终点，却忽略了沿途的美丽风景，连出发的起点和初衷，也忘记了。最后恍然大悟，无论是一个人走，还是结伴同行，都要将纯真和热爱装进行囊，才能不辜负明月与骄阳。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;光阴荏苒，岁月如梭。时间眨了下眼睛，往昔学生时代的欢声笑语已化作回忆，随之而来的是天研工作的点点滴滴。半年的时光，无论对于自己还是对于天研，一切都是从零开始，一切却又那么令人值得期待。&lt;/p&gt;

&lt;h2 id=&quot;传承扬起前进风帆&quot;&gt;传承扬起前进风帆&lt;/h2&gt;

&lt;p&gt;从最初的业务培训、客服实习，到环境搭建、代码调试，到代码评审、修复漏洞，再到投产运行、技能转移。每一个环节都见证着我们新人的成长，每一份成绩又都蕴含着中心领导的关怀与老员工的谆谆教诲：初入职场的我们不懂业务，于是我们参加了客服实习与电商业务培训；不明确项目管理流程，于是质量管理部的同事为我们耐心解答项目管理中的具体流程；不懂开发编码规范，于是老员工为我们讲代码、明要求、传经验；不懂测试的必要性，于是测试人员为我们介绍自动化测试工具来为开发迭代节省时间；不懂投产部署知识，于是老员工用讲解和实际操作在投产间完成了一次又一次投产任务；不懂行内专有名词和已有系统的对接工作，于是老员工用多年的工作经验与人际关系不断地为我们寻找资源，为项目开发助力。&lt;/p&gt;

&lt;p&gt;正如之前中心所提倡的代表坚定、踏实与精益求精的工匠精神：工匠不一定都能成为佼佼者，但是每一个佼佼者的身上都有这种“工匠精神”。正是软开中心无数前辈们的脚踏实地与辛勤努力，让我们这些职场新人学会耐心、专注和坚持，守得云开见月明。&lt;/p&gt;

&lt;h2 id=&quot;奋斗共筑美好未来&quot;&gt;奋斗共筑美好未来&lt;/h2&gt;

&lt;p&gt;客服中心外大雪纷飞，电脑工位旁斗志昂扬。半年的工作任务中，除了让我对.Net MVC框架不断了解，也对电商平台中的集团采购业务有了更深入的理解。完整的项目开发经历，自由活跃的工作氛围，充满温馨的天研大家庭，让我逐渐从新入职的迷茫中找到自己前进的方向，完成从学生到职员的转变。当然，在转变过程中也逐渐发现自己的很多不足，未来的工作仍然需要自己不断学习，不断在实践中成长。在金融企业的科技部门工作，于是做一个懂金融的IT人便也是我们不断努力的另一个方向：既要懂技术，又要懂业务。&lt;/p&gt;

&lt;p&gt;工匠对职业的尊重，对专业精神的敬畏，对技艺的传承，无一不体现出对自然的热爱，那是心中深远处的理念支撑。新的平台拥有无限的潜力，未来的发展依然需要大家的共同努力。天研在起步，技艺在传承，我们共奋斗，未来不是梦！&lt;/p&gt;
</description>
        <pubDate>Mon, 26 Dec 2016 00:00:00 +0800</pubDate>
        <link>http://xff2016.top/opinion/2016/12/26/why.1.html</link>
        <guid isPermaLink="true">http://xff2016.top/opinion/2016/12/26/why.1.html</guid>
        
        <category>随笔，总结</category>
        
        
        <category>opinion</category>
        
      </item>
    
      <item>
        <title>广、深、高、速</title>
        <description>&lt;p&gt;原文为北邮信通院张琳院长在2016研究生开学典礼上的讲话。虽然没有聆听的机会，但是见其文字如闻其声。本文摘取比较赞同的部分，与己自勉。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;今年春天的研究生毕业典礼上，我的讲话主旨是三个字，“忍、狠、滚”。今天讲话的主旨多说一个字，“广、深、高、速”，四个字连起来就是广州和深圳之间的那条高速。谈谈研究生生活中的广深高速，不过，每个字后面要加上一个‘度’。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;首先，【广度】-就是自己的胸怀和视野要宽广，简单说就是think big，最精妙的解读就是立志“把论文写在祖国的大地上”。如何响应习总书记在今年全国科技创新大会上的讲话，是每一个研究生都应该考虑的。勇于追求真理和知识，大胆发明和创新。想想看，如果这个世界因为你的科学研究，变得好了一点，是不是很赞？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;其次，【深度】-就是科研的目标要瞄准以深为代表的“深海、深地、深空、深蓝”的战略高技术。虽然，特指网络空间、信息技术、人工智能领域的深蓝更像是我们的专业领域，但深海、深地和深空同样特别需要信息和通信的实现和突破。2016年底的火星救援电影，就形象的说明了信息和通信的重要性。中国要实现登月球、登火星、登小行星，都是深空领域的典型大工程。如何掌握、实现其中的关键信息和通信技术，能只靠“我航”、“我理”吗？还是要靠“我邮”。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;再有，【高度】-就是职业的追求要有高度。各位可以查查世界著名高校的电子工程专业、计算机科学专业有多少印度裔的教授；世界多少大公司的CEO是印度裔。现在，谷歌CEO、微软CEO都是印度裔。虽然奥运会赛场上印度差中国好几条街，但信息通信领域的冠军，中国人的位置还差得远。无怪印度的前任总理曾经解读IT是India Tomorrow。中印是两个人口大国，无论你设定自己的未来职业是在学术圈还是工业界，竞争都是全球性的。希望各位保持职业上的高度追求，不浅尝辄止。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;最后，【速度】-就是要培养自己的deadline意识，deadline的表面意义就是“双规”，在规定时间按照规定要求完成工作。我想，硕士最低也要按时毕业吧，博士最低也要达到学校规定的学术发表要求吧，这些都有一个时间限制。科研开始了，还有更多的文章投稿截止日、软件发布截止日、系统上线截止日。天下武功，唯快不破，科研也是如此。&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Sat, 03 Sep 2016 17:21:49 +0800</pubDate>
        <link>http://xff2016.top/jekyll/update/2016/09/03/Always-in-BUPT.html</link>
        <guid isPermaLink="true">http://xff2016.top/jekyll/update/2016/09/03/Always-in-BUPT.html</guid>
        
        <category>随笔</category>
        
        
        <category>Jekyll</category>
        
        <category>Update</category>
        
      </item>
    
      <item>
        <title>ABC-天津-实习-两月</title>
        <description>&lt;h2 id=&quot;写在前面&quot;&gt;写在前面&lt;/h2&gt;
&lt;p&gt;自从工作以来，凡事必绕不过HR。以前觉得HR的工作挺普通，只是管理人事工资等的企业机构，不过自从校招找工作以来，特别是入职之后的这段时间，确实颠覆了我以前对HR的理解。
  有这么一句话，说HR的话只能听一半。为什么呢？刚开始也不太懂，不过仔细想想这道理就类似于企业的危机公关：凡事讲求预期，当你预期良好的时候，心理层面就给人以安全感。
  HR也一样如何以最低的成本去为公司争取人才最大化便是最主要的职责了。初入职的HR毕竟也从校园里出来没多久，对刚走出校园的小鲜肉还存有怜悯之心，这也就注定是初级的HR；
  时间久了，自己关心的要素已不再是自己生计的时候，如何为公司利益最大化服务便成了主线任务。因此在有限合法的范围内画饼圈人也就顺理成章的成为了资深HR的必备技能。
  人生多苦难，这一关怕是没有几个人躲得过去吧。&lt;/p&gt;

&lt;h2 id=&quot;关于待遇&quot;&gt;关于待遇&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;首先明确一点，工资假设的基础是HR所说待遇的最底限。HR没必要也没义务为他曾经画出的大饼去负责，说了是个范围，而且也没写在合同上。
  因此所有的事端和抱怨都来自于每个人自己心中的那点侥幸心理。理想不能和现实混为一谈，更何况是HR说的话，对吧？
  在这个假设基础上，对于公司来说工资是正常合理范围的，而且也是员工曾经“同意”的。&lt;/li&gt;
  &lt;li&gt;其次，工资比较低是国有企业的通病，唯一一点可以支撑下去的是福利待遇。不过现在一切都还未知，只有暂时的工资+五险一金。
  说到公积金，真正买房时用处也很有限。倒是在不在天津买房这个事，说大不大，说小不小。
  不过遵循的原则很简单嘛：仰望星空，脚踏实地，不忘初心，常回家看看。&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;缴费分类&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;缴费基数&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;单位比例&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;个人比例&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;缴费合计&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;划入个账&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;住房公积金&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4500&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;12%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;12%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1080&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;—–&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;补充公积金&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4500&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;30%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;—–&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1350&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;—–&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;养老&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4500&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;19%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;8%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1215&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;360&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;医疗&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4500&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;11%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;2%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;585&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;191&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;失业&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4500&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;1%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0.5%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;67.5&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;—–&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;生育&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4500&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0.5%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;—–&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;22.5&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;—–&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;工伤&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4500&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;0.2%&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;—–&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;9&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;—–&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;怎么对待&quot;&gt;怎么对待&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;选择这里的决定是自己做出的，在最艰难的时候，自己要付担得起这份责任。&lt;/li&gt;
  &lt;li&gt;落户的事情沸沸扬扬，天津之于我，我之于天津，一切都是个迷。雾散了，自然就好了。&lt;/li&gt;
  &lt;li&gt;本科找工作时的艰辛，未曾忘记。水平有限，需倍加努力，才能不辜负青春年华。&lt;/li&gt;
  &lt;li&gt;企业性质不太看重，周围的人来到一起的原因也是错综复杂，那你是来找什么的呢？&lt;/li&gt;
  &lt;li&gt;上一天班就要有一天的成果，不磨洋工，不去抱怨。往前看，能解决问题的方法才是王道。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;如何应对&quot;&gt;如何应对&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;大半夜的爬起来写了这么多，大概也是累积了一个多月感触的原因吧。
   刚刚工作，工资太少，你不要骗我(⊙o⊙)…&lt;/li&gt;
  &lt;li&gt;对自己来说，鉴于目前自身的情况，努力学习，等待机会较为合适。
   刚开始工作，首先是健康，其次是加班，良好的身体基础加上非一般的努力工作，
   这样在有机会时才能很好的把握住机会。不要说没有机会，经济社会发展到现在，机会变得更加丰富，
   更加趋向于多远化。所以，好好锻炼身体，多提高自己的工作效率和知识储备吧。&lt;/li&gt;
  &lt;li&gt;少年，你未来的路还有很远！以后怎么样，自会用脚投票。&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 27 Aug 2016 06:21:49 +0800</pubDate>
        <link>http://xff2016.top/opinion/2016/08/27/About-Work-Salary.html</link>
        <guid isPermaLink="true">http://xff2016.top/opinion/2016/08/27/About-Work-Salary.html</guid>
        
        <category>随笔</category>
        
        
        <category>opinion</category>
        
      </item>
    
      <item>
        <title>大四匆忙面试的遗憾与成长</title>
        <description>&lt;h2 id=&quot;没有压力就不去努力你就是这样一次次伤害自己的&quot;&gt;没有压力就不去努力，你就是这样一次次伤害自己的！&lt;/h2&gt;

&lt;p&gt;初春刚过，看到自己出现的考研分数出来的一瞬间，内心涌过的是一种无法释然的伤痛。总的算下来，加上此前两次高考的失利，这已经是第三次栽在这种较为重大的转折点上了。每每到这种时候，我都会想是不是自己确实不适合考试？一考试起来就会紧张？可是平静下来之后细细想想，还是自己的努力程度和适应能力不足。&lt;a href=&quot;/opinion/2016/05/25/Find-Job-Summmarized.html  (大四匆忙面试的遗憾与成长)&quot;&gt;凌晨四点的科比故事&lt;/a&gt;和如今库里执着奋进的故事想来都是耳熟能详，可打了鸡血之后三分钟的热度又怎能支撑自己向着目标继续前行？吾忆往之不谏,知来者之可追。眼下能做的就只能抓住春招的机会寻求暂时的出路，至于选择什么样的职业或者适不适合自己的问题，全淹没在了海投出去的简历上了。&lt;/p&gt;
&lt;h2 id=&quot;投简历和面试的流水线&quot;&gt;投简历和面试的流水线&lt;/h2&gt;

&lt;h3 id=&quot;那些年走过的路&quot;&gt;那些年走过的路&lt;/h3&gt;

&lt;h3 id=&quot;面试的流程&quot;&gt;面试的流程&lt;/h3&gt;

&lt;h2 id=&quot;面试问题小结&quot;&gt;面试问题小结&lt;/h2&gt;

&lt;h3 id=&quot;为什么不是你&quot;&gt;为什么不是你？&lt;/h3&gt;

&lt;h3 id=&quot;前行的足迹&quot;&gt;前行的足迹&lt;/h3&gt;

</description>
        <pubDate>Wed, 25 May 2016 00:00:00 +0800</pubDate>
        <link>http://xff2016.top/opinion/2016/05/25/Find-Job-Summmarized.html</link>
        <guid isPermaLink="true">http://xff2016.top/opinion/2016/05/25/Find-Job-Summmarized.html</guid>
        
        <category>随笔</category>
        
        
        <category>opinion</category>
        
      </item>
    
      <item>
        <title>2015再见，2016启航</title>
        <description>
</description>
        <pubDate>Thu, 31 Dec 2015 00:00:00 +0800</pubDate>
        <link>http://xff2016.top/opinion/2015/12/31/Summarize-2015.html</link>
        <guid isPermaLink="true">http://xff2016.top/opinion/2015/12/31/Summarize-2015.html</guid>
        
        <category>随笔</category>
        
        
        <category>opinion</category>
        
      </item>
    
      <item>
        <title>使用Mininet搭建环形拓扑</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://mininet.org/&quot; title=&quot;Mininet&quot;&gt;Mininet&lt;/a&gt;是一个可以在有限资源的普通电脑上快速建立大规模SDN原型系统的网络仿真工具。该系统由虚拟的终端节点（End-Host）、OpenFlow交换机、控制器（也支持远程控制器）组成，这使得它可以模拟真实网络，可对各种想法或网络协议等进行开发验证。目前Mininet已经作为官方的演示平台对各个版本的OpenFlow协议进行演示和测试。Mininet是基于Linux Container这一内核虚拟化技术开发出的进程虚拟化平台，主要运用了Linux内核的namespace机制。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/sdn/sudo mn.png&quot; alt=&quot;sudo mn&quot; /&gt;
Mininet在/mininet/node.py中定义了Node、OVSSwitch和Controller等重要的类。在OVSSwitch类中，通过使用命令OVS的命令创建交换机从而得到一个OVS实例。Mininet创建的host，switch等实例实际上是运行在不同namespace下的某个进程。默认情况下Host运行在自己的namespace中，交换节点运行在root namespace中。
mininet作为一个轻量级软定义网络研发和测试平台，其主要特性包括&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;支持Openflow、OpenvSwitch等软定义网络部件&lt;/li&gt; 
    &lt;li&gt;方便多人协同开发&lt;/li&gt;
    &lt;li&gt;支持系统级的还原测试&lt;/li&gt;
    &lt;li&gt;支持复杂拓扑、自定义拓扑&lt;/li&gt;
    &lt;li&gt;提供python API&lt;/li&gt;
    &lt;li&gt;很好的硬件移植性（Linux兼容），结果有更好的说服力&lt;/li&gt;
    &lt;li&gt;高扩展性，支持超过4096台主机的网络结构&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;当然他也有缺点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;只是一个在计算机上进行网络拓扑搭建仿真的工具&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;大致介绍到此，对于资源比较短缺又想设计模拟真实网络拓扑的人员来说，Mininet确实是一个比较不错的选择。&lt;/p&gt;

&lt;h2 id=&quot;一要完成的目标&quot;&gt;一、要完成的目标&lt;/h2&gt;
&lt;p&gt;用mininet搭建一个有环网络，使用Pox控制器实现网络中主机互相通信（避免环路影响）。
&lt;img src=&quot;/assets/img/sdn/item.png&quot; alt=&quot;item&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;二配置和使用mininet&quot;&gt;二、配置和使用Mininet&lt;/h2&gt;
&lt;p&gt;考虑到mininet虚拟实验只需要在一台电脑上运行即可，所以没有选择&lt;a href=&quot;http://fnlab.org/&amp;quot;SDN创新实验平台&amp;quot;&quot;&gt;SDN创新实验平台&lt;/a&gt;来做，而是在自己电脑上通过装Vmware Workstation+Ubuntu+Mininet+Pox的方式进行实验，这样也方便修改拓扑结构的源码或自定义拓扑。
安装虚拟机和Ubuntu的过程不是实验重点，不再赘述。安装mininet采用了本地安装Mininet源代码的方式：&lt;/p&gt;

&lt;p&gt;【获取源代码】
    $ git clone git://github.com/mininet/mininet&lt;/p&gt;

&lt;p&gt;【安装所有工具，包括OpenvSwitch、Wireshark、POX】
    $ mininet/util/install.sh –a&lt;/p&gt;

&lt;p&gt;由于采用了安装所有工具的方法，因此省去了单独安装POX控制器的步骤.
    $ sudo mn&lt;/p&gt;

&lt;p&gt;默认拓扑测试后验证安装成功。
&lt;img src=&quot;/assets/img/sdn/sudomn success.png&quot; alt=&quot;sudomn success&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;搭建自定义拓扑&quot;&gt;搭建自定义拓扑&lt;/h2&gt;
&lt;p&gt;mininet提供了python api，可以用来方便的自定义拓扑结构，在mininet/custom目录下给出了一个例子：topo-2sw-2host.py。
 该文件中定义了一个mytopo，则可以通过–topo选项来指定使用这一拓扑。实验时先对官方给的2sw-2host类型的自定义拓扑进行了学习，
 之后在custom文件夹下新建了一个实验拓扑，考虑到是环路拓扑，所以取名MyRingTopo.py。
&lt;img src=&quot;/assets/img/sdn/custom.png&quot; alt=&quot;custom&quot; /&gt;
  自定义拓扑MyRingTopo.py的文件代码如下：
  &lt;img src=&quot;/assets/img/sdn/topo.png&quot; alt=&quot;topo&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;三开启mininet和pox控制器进行测试&quot;&gt;三、开启Mininet和POX控制器进行测试&lt;/h2&gt;
&lt;p&gt;实验要求实现网络中主机互相通信（避免环路影响），在做实验前经过查资料了解到环路广播风暴，如果有环路，数据帧将会在环路中来回传递，大量增生数据帧，形成广播风暴，从而导致正常的通信过程不能继续。在SDN中部分控制器可以抑制环路广播风暴的产生，如Floodlight，而像POX控制器，不能很好的解决广播风暴的问题，但对于本次实验的简单拓扑依然可以解决。
环路通信常常是在现实环境下出于对通信稳定的保障而设置的备用连线，确有其实用价值，在物理拓扑上必不可少，逻辑上则要采取控制来抑制由于环路导致的可能出现的广播风暴等问题。而mininet本身只是一个虚拟网络仿真工具，并不能对出现的环路广播风暴等问题进行控制，因此需要相应的控制器添加处理规则等方式来确保环路通信的正常运转。&lt;/p&gt;
&lt;h3 id=&quot;1开启自定义拓扑&quot;&gt;1.开启自定义拓扑：&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/sdn/starttopo.png&quot; alt=&quot;starttopo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;指定远端控制器ip为127.0.0.1，端口号为6666。生成的拓扑结果如下：
&lt;img src=&quot;/assets/img/sdn/ettopo.png&quot; alt=&quot;ettopo&quot; /&gt;
打印拓扑节点信息：
&lt;img src=&quot;/assets/img/sdn/printtopo.png&quot; alt=&quot;printtopo&quot; /&gt;
所有的网络接口：
&lt;img src=&quot;/assets/img/sdn/intfs.png&quot; alt=&quot;intfs&quot; /&gt;
注：实验时先在没有添加任何抑制广播风暴的规则下进行测试，发现环路不能ping通：
&lt;img src=&quot;/assets/img/sdn/failconnect.png&quot; alt=&quot;failconnect&quot; /&gt;
且pox控制台会不停输出错误信息：
&lt;img src=&quot;/assets/img/sdn/errinfo.png&quot; alt=&quot;errinfo&quot; /&gt;
通过查资料了解到POX中的openflow.spanning_tree组件可以解决这个问题:该组件使用discovery组件来创建网络拓扑的视图，构造一棵生成树，然后使不在生成树中的交换机端口的洪泛功能失效，使得网络中不存在洪泛回路。虽然提到了生成树，但是该组件同生成树协议几乎没有关系，只是有相似的目的。要使用的两个选项的意义如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ --no-flood  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;只要交换机连接上了就使该交换机的所有端口洪泛失效，对于某些端口，稍后将使能。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ --hold-down  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;防止洪泛控制在一个完整的发现回路完成前被改变
因此输入以下命令使用该组件能在一定程度上抑制广播风暴。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ openflow.spanning_tree --no-flood --hold-down   
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;2开启pox&quot;&gt;2.开启POX：&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/assets/img/sdn/startpox.png&quot; alt=&quot;startpox&quot; /&gt;
注释：&amp;lt;ul&amp;gt;
      &amp;lt;li&amp;gt;l2_learning属于forwarding组件包，使得OpenFlow交换机的行为如同一个二层的具有自学习功能的交换机该组件，实现 L2链路层上的地址学习。&amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;openflow.of_01组件的功能是是同openflow 1.0协议版本的交换机进行通讯，默认启动。&amp;lt;/li&amp;gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ --port=6666指定该POX端口为6666。  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;li&gt;spanning_tree组件依赖discovery组件，同属OpenFlow组件包。&lt;/li&gt;
&lt;p&gt;&amp;lt;/ul&amp;gt;&lt;/p&gt;

&lt;h3 id=&quot;3进行测试&quot;&gt;3.进行测试：&lt;/h3&gt;
&lt;p&gt;在配置完POX的相应组件和规则后，对原有的自定义拓扑进行了测试:
所有节点之间互ping结果：
&lt;img src=&quot;/assets/img/sdn/ping.png&quot; alt=&quot;ping&quot; /&gt;
pingpair测试结果：
&lt;img src=&quot;/assets/img/sdn/pingpair.png&quot; alt=&quot;pingpair&quot; /&gt;
h1和h4带宽测试结果：
&lt;img src=&quot;/assets/img/sdn/iperf.png&quot; alt=&quot;iperf&quot; /&gt;
h1和h4指定带宽udp测试结果：
&lt;img src=&quot;/assets/img/sdn/iperfudp.png&quot; alt=&quot;iperfudp&quot; /&gt;
关闭Mininet时mininet控制台输出：
&lt;img src=&quot;/assets/img/sdn/exit.png&quot; alt=&quot;exit&quot; /&gt;
关闭Mininet时POX控制台输出：
&lt;img src=&quot;/assets/img/sdn/exitpox.png&quot; alt=&quot;exitpox&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;四结语&quot;&gt;四、结语&lt;/h2&gt;
&lt;p&gt;在解决环状拓扑广播风暴的问题上，刚开始只是知道广播风暴形成的原因，却不知道怎么解决。后来对POX的组件和功能进行了仔细的了解，找出了相应的解决办法。不过POX的操作比起Mininet的操作相对麻烦些，期间好多次操作错误后一遍又一遍的重启控制器。
环状拓扑仿真对网络拓扑的理解要求更高，并且利用到了Mininet和POX控制器。
操作期间参考了黄韬等老师编著的&lt;a href=&quot;http://book.douban.com/subject/26184169/&quot; title=&quot;《软件定义网络-核心原理与应用实践》&quot;&gt;《软件定义网络-核心原理与应用实践》&lt;/a&gt;、&lt;a href=&quot;http://www.muzixing.com&quot; title=&quot;Milestone&quot;&gt;Milestone&lt;/a&gt;和&lt;a href=&quot;http://www.sdnlab.com/&quot; title=&quot;SDNLAB&quot;&gt;SDNLAB&lt;/a&gt;上的资料，在此表示感谢。&lt;/p&gt;

&lt;p&gt;如果你跟着这篇不那么详尽的教程，成功搭建了Mininet环境并进行了环形网络拓扑仿真，恭喜你！剩下的就是保持热情去研究吧。&lt;/p&gt;
&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
    /* * * CONFIGURATION VARIABLES * * */
    var disqus_shortname = 'x-flowing';
    
    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();
    
&lt;/script&gt;

&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;https://disqus.com/?ref_noscript&quot; rel=&quot;nofollow&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;

</description>
        <pubDate>Fri, 31 Jul 2015 06:21:49 +0800</pubDate>
        <link>http://xff2016.top/project/2015/07/31/Mininet-Tupo.html</link>
        <guid isPermaLink="true">http://xff2016.top/project/2015/07/31/Mininet-Tupo.html</guid>
        
        <category>笔记</category>
        
        <category>通信</category>
        
        <category>仿真</category>
        
        
        <category>project</category>
        
      </item>
    
      <item>
        <title>我为什么写博客？</title>
        <description>&lt;h2 id=&quot;世界这么乱装纯给谁看&quot;&gt;世界这么乱，装纯给谁看&lt;/h2&gt;

&lt;p&gt;写博客这个不知道几个“互联网世纪”前的东西，现在还有必要拿出来说吗？不想用太多的理论去说这个命题，先看看两个最近对我影响比较大的两个博客：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://stevelosh.com/&quot; title=&quot;Steve Losh&quot;&gt;Steve Losh&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://sivers.org/&quot; title=&quot;Derek Sivers&quot;&gt;Derek Sivers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;第一个是&lt;a href=&quot;http://stevelosh.com/&quot; title=&quot;Steve Losh&quot;&gt;Steve Losh&lt;/a&gt;的博客，我在搜索了&lt;a href=&quot;http://stevelosh.com/blog/2011/09/writing-vim-plugins/&quot; title=&quot;Write Vim Plugins&quot;&gt;VIM&lt;/a&gt;相关的关键字之后被带到了这里。简洁的风格和关屏的利落就已经吸引了我，顺手点开其他的文章看了看，博主非常的谨慎认真，每一篇都是高质量的作品，看得出他的用心，整个网站也是异常的简洁舒适，深深的被这种淡然的心态打动，躲进小楼成一统，哪管他春夏与秋冬。再看看他的介绍：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“I’m a programmer, photographer, dancer &amp;amp; bassist from Rochester, New York.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;呵呵，他完全就过着我期望的生活。&lt;/p&gt;

&lt;p&gt;第二位博主的&lt;a href=&quot;http://sivers.org/sharing&quot; title=&quot;The co-op business model: share whatever you've got&quot;&gt;‘Co-op Business Model’&lt;/a&gt;文章也是让我茅厕顿开，这种分享的精神，用博主自己活生生的例子讲述出来之后，读者自然会被感动的，我也在团队内分享过这篇文章，下面我简要介绍一下他的事迹吧：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1994年，他把需要邮寄才能得到的版权申请表单扫描上传到网上，为大家申请提供方便的下载服务，直到版权机构将表单上网之前，他的网站是全美唯一一个可以下载到表单的地方，他也并没有盈利。&lt;/li&gt;
  &lt;li&gt;1995年，他为自己的乐队注册了一个名字，并且把注册过程详细的写在自己的博客上，很长一段时间内，他的这篇文章几乎成了注册乐队名称的标准教程。&lt;/li&gt;
  &lt;li&gt;1996年，他有了一个&lt;a href=&quot;http://artificialrecords.com&quot;&gt;小唱片公司&lt;/a&gt;，也就有了一个条形码账户，他需要支付$750给条码协会，这样他就拥有了十万个条码，一开始他免费把这些条码给朋友们要出售的CD用，后来，越来越多人知道了他有条码，又懒得去自己申请账户，就给他付一定的费用，方便的使用，他每个收费$20，在过去的12年里，他靠出售这个条码就赚到了二百万美元。&lt;/li&gt;
  &lt;li&gt;1997年，他花费$1000申请了一个信用卡商户账户，用来销售自己的CD，一开始也免费给他的做音乐的朋友们帮忙卖，后来有越来越多的陌生人希望能使用他的账号，省的自己去申请，因为他有一些劳动量，所以也收取一定费用，每张专辑收取$35的制作费，然后每卖一张收$4，在过去的12年中，他赚到了二千万美元。&lt;/li&gt;
  &lt;li&gt;1999年，他学会了制作网站，一开始是为了展示自己的CD，后来他的朋友们抱怨自己的网站服务商很糟糕，希望能使用&lt;a href=&quot;http://sivers.org/&quot; title=&quot;Derek Sivers&quot;&gt;Derek Sivers&lt;/a&gt;的系统，因为也有一些劳动量，所以会一开始收取$300，然后每个月收取$20，在过去的9年中，他赚到了五百万美元。&lt;/li&gt;
  &lt;li&gt;2000年以后，他会无偿的分享所有他学到的东西，或许“&lt;a href=&quot;http://sivers.org/below-average&quot; title=&quot;probably below average&quot;&gt;他不是最聪明的人&lt;/a&gt;”，但是分享没有什么成本，而且这是正确的事，所以在后来的11年里，他收获了很多的好运与快乐，遇见了很多有趣的人。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;找到了一个神交的外国博主，又有这么励志“好人好报”的故事，我想大道理不用讲太多也都明白了。&lt;/p&gt;

&lt;p&gt;还有一篇理论性很强的文章做参考，&lt;a href=&quot;http://www.cnblogs.com/bangerlee/archive/2011/09/11/2173632.html&quot; title=&quot;Why I Blog翻译版&quot;&gt;我为什么写博客&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&quot;那些虚的没用说点实际的&quot;&gt;那些虚的没用，说点实际的&lt;/h2&gt;

&lt;p&gt;或许这些看起来很美好的东西，你会觉得离自己很远，那就说点直接的收益，看看是否够诱人。&lt;/p&gt;

&lt;p&gt;我还是先推荐一篇文章：&lt;a href=&quot;http://mindhacks.cn/2011/11/04/how-to-interview-a-person-for-two-years/&quot; title=&quot;怎样花两年时间去面试一个人&quot;&gt;怎样花两年时间去面试一个人&lt;/a&gt;，招聘永远是公司和个人的难题，双方的信息不对称，导致这个矛盾无法调和，这篇文章就是告诉你，如何自己去推销自己，让公司得到你的全部优质信息，尤其在现在的网络环境下，将自己工作有用的能力搬上网，那么就是最好的能力证明，就是最好的面试答案。无论你是程序员，还是设计师。&lt;/p&gt;

&lt;p&gt;或许你会想，好吧好吧，那我找个博客站开一个博客好了，我不太会同意这个做法，有一个个人的品牌，对于自己的发展只有好处，行走网络江湖，有同一个ID标识，无论在哪里都会让人看到你，这样长期的潜移默化，个人的品牌效力也就展现出来了。然后有一个自己独立的域名，并且用心去经营，肯定会有人欣赏的。而且经过我的一番研究，成本并不是很高。&lt;/p&gt;

&lt;p&gt;我期望的博客内容，并不是贴一段代码，或者胡言乱语两句，具体的质量可以参考&lt;a href=&quot;http://stevelosh.com/&quot; title=&quot;Steve Losh&quot;&gt;Steve Losh&lt;/a&gt;，这样的高质量，更能展现自己的态度，或许你说有一些小心得小点滴也想和大家分享，那也可以在自己的空间下开一个Wiki频道，专门存放琐碎的知识点。&lt;/p&gt;

&lt;p&gt;高质量的博文，肯定需要自己缜密的思考，并且需要一定的文笔才能将自己的想法完整清晰的表达出来，我在这两个方面都还差了很多，还需要大量的练习才好，给自己这样的机会。&lt;/p&gt;

&lt;p&gt;在快知识、微段子横行的今天，能对一个个问题深入的去思考，一方面得到的是心灵的平静，更多的则是深入思考之后的收获的喜悦感，会有不一样的体会的。&lt;/p&gt;

&lt;h2 id=&quot;技术很简单不用担心&quot;&gt;技术很简单，不用担心&lt;/h2&gt;

&lt;p&gt;或者你很幸运不是一个程序员，或者你是一个不用搞这些乱七八糟东西的程序员，那么相信我，你一样可以搭起来一个跟我的一模一样的个人站点的。&lt;/p&gt;

&lt;p&gt;我要特别鸣谢以下几个站点、技术：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://godaddy.com&quot; title=&quot;Godaddy&quot;&gt;GoDaddy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://dnspod.cn&quot; title=&quot;DNSPod&quot;&gt;DNSPod&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://github.com&quot; title=&quot;Github:social coding&quot;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mojombo/jekyll&quot;&gt;Jekyll&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://disqus.com&quot; title=&quot;Disqus&quot;&gt;Disqus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;下面我来做一个简要说明，完整的搭建方法，我后面会专门写一篇博客分享给大家，等不及的可以自己去找资料哈。&lt;/p&gt;

&lt;h3 id=&quot;godaddy--dnspod&quot;&gt;GoDaddy &amp;amp; DNSPod&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://godaddy.com&quot; title=&quot;Godaddy&quot;&gt;GoDaddy&lt;/a&gt;是一家非常不错的域名注册商，良好的用户体验，飞快的生效速度，给力的优惠码，也支持支付宝，永远不用担心国内那些流氓厂商的流氓行为，注册了域名，就可以放心不会被别人抢走。在Godaddy注册域名是一件很简单的事情，按照提示走就完全没有问题，唯一需要动脑筋的可能是，你要想一个既有个人标识，又没有被别人注册的域名了，我觉得我的&lt;a href=&quot;http://xff2016.club&quot; title=&quot;X-Flowing&quot;&gt;X-Flowing&lt;/a&gt;还是不错的，呵呵。&lt;/p&gt;

&lt;p&gt;Godaddy一切都很完美，直到遇到了GFW，原因你肯定懂。前段时间推上风传Godaddy的DNS服务器被墙，导致域名不能解析，看起来好像自己的站被墙了一样，这个确实是个闹心的事情，还好国内有DNS服务的替代产品，而且做得还非常的不错，也是免费的，功能强大，速度快，不用担心被和谐，所以隆重推荐&lt;a href=&quot;http://dnspod.cn&quot; title=&quot;DNSPod&quot;&gt;DNSPod&lt;/a&gt;给大家，可以试用一下，把DNS服务迁移到DNSPod来，解决后顾之忧，配置比较简单，不懂的可以等我后面的博客啦，哈。&lt;/p&gt;

&lt;h3 id=&quot;github--jekyll&quot;&gt;GitHub &amp;amp; Jekyll&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://github.com&quot; title=&quot;Github:social coding&quot;&gt;GitHub&lt;/a&gt;是一个非常优秀的产品，爆发式的增长，各大优质开源软件的蜂涌而至，只能说明人们太需要他了。&lt;strong&gt;Social Coding&lt;/strong&gt;是他的Slogan，产品的设计确实解决了很多代码交流的难题，让世界更平，让交流更畅，关于Git的学习，大家可以移步这里&lt;a href=&quot;http://progit.org/book/zh/&quot; title=&quot;Pro Git&quot;&gt;Pro Git中文版&lt;/a&gt;，这也是一个本身就在Github维护的一个项目，高质量的翻译了Git入门书，讲解详细，是学习Git的好资料。&lt;/p&gt;

&lt;p&gt;GitHub是一个伟大的产品，&lt;a href=&quot;http://pages.github.com&quot; title=&quot;GitHub Pages&quot;&gt;GitHub Pages&lt;/a&gt;是他伟大的一部分，GitHub Pages基于&lt;a href=&quot;https://github.com/mojombo/jekyll&quot;&gt;Jekyll&lt;/a&gt;博客引擎，当我深入的研究了他之后，我深深的想给Jekyll的作者一个拥抱，列举一下Jekyll的优点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;可以单独放在自己的服务器上，他也是GitHub Pages的基础，质量可靠&lt;/li&gt;
  &lt;li&gt;将博客最重要的功能抽取出来，去除了&lt;a href=&quot;http://wordpress.org&quot; title=&quot;WordPress&quot;&gt;WordPress&lt;/a&gt;的复杂、烦躁的东西，一切都是清晰可控的&lt;/li&gt;
  &lt;li&gt;可以方便的使用&lt;a href=&quot;http://markdown.tw/&quot; title=&quot;Markdown语法&quot;&gt;Markdown&lt;/a&gt;等其他标记语言&lt;/li&gt;
&lt;/ul&gt;
&lt;li&gt;清晰、简洁的文件组织，完美的永久链接方案，既漂亮、又可定制&lt;/li&gt;
&lt;li&gt;博客静态化，速度快&lt;/li&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mojombo/jekyll&quot;&gt;Jekyll&lt;/a&gt;是完美的&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;disqus&quot;&gt;Disqus&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mojombo/jekyll&quot;&gt;Jekyll&lt;/a&gt;都很不错，但是可能有些童鞋会不满意于他不提供评论功能，这个时候，&lt;a href=&quot;http://disqus.com&quot; title=&quot;Disqus&quot;&gt;Disqus&lt;/a&gt;的出现就显得是雪中送炭了。&lt;/p&gt;

&lt;p&gt;Disqus是一个社会化的评论解决方案，请允许我使用这个烂透了的词，调用它的接口非常简单，在自己的页面加载他的一段JS代码即可，如果别人注册了Disqus，那么就可以方便的留言，交流，一处登录，处处方便，而且Disqus也提供了一些spam等策略，不用自己操心了，并且可以和一些现有的博客系统很好的转换对接。越来越多的网站开始使用Disqus的服务了，这是一个非常不错的趋势，Jekyll配合&lt;a href=&quot;http://disqus.com&quot; title=&quot;Disqus&quot;&gt;Disqus&lt;/a&gt;实在是完美了。我别无所求了。&lt;/p&gt;

&lt;h2 id=&quot;tldr&quot;&gt;TL;DR&lt;/h2&gt;

&lt;p&gt;写到这里，基本的点已经介绍完毕，看看Jekyll生成的博客页面，我心满意足，虽然文笔很烂，语句多不通顺，但是这是一个新的开始了，我觉得心灵都纯洁了不少，这不是发一条微博什么能带来的快乐。&lt;/p&gt;

&lt;p&gt;对于那些对上述技术不是很熟悉的童鞋来说，搭建起来可能还是需要花费些功夫的，我会在后面写一篇专门的教程，给有需要的人，等不及了的，可以自己研究下，&lt;strong&gt;生命在于折腾&lt;/strong&gt;。&lt;/p&gt;

</description>
        <pubDate>Fri, 31 Jul 2015 00:00:00 +0800</pubDate>
        <link>http://xff2016.top/opinion/2015/07/31/why.html</link>
        <guid isPermaLink="true">http://xff2016.top/opinion/2015/07/31/why.html</guid>
        
        <category>随笔</category>
        
        
        <category>opinion</category>
        
      </item>
    
      <item>
        <title>About me</title>
        <description>&lt;p&gt;Last update: 2016/3/31&lt;/p&gt;
&lt;h1 id=&quot;wei-liu&quot;&gt;Wei Liu&lt;/h1&gt;
&lt;p&gt;Communication Engineering&lt;/p&gt;

&lt;p&gt;School of Information and Communication Engineering (SICE)&lt;/p&gt;

&lt;p&gt;Beijing University of Posts and Telecommunications (BUPT)&lt;/p&gt;

&lt;p&gt;Email:bupt2016@126.com&lt;/p&gt;

&lt;p&gt;Github: https://github.com/xff2016&lt;/p&gt;

&lt;p&gt;Homepage:http://xff2016.club&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;education-background&quot;&gt;Education background&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Communication Engineering&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;School of Information and Communication Engineering (SICE)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Beijing University of Posts and Telecommunications (BUPT)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Freshman of Graduate Student&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;internship&quot;&gt;Internship&lt;/h1&gt;

&lt;h1 id=&quot;skills&quot;&gt;Skills&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;Programming language: Java(70), C／C++(20%), Python(10%).&lt;/li&gt;
  &lt;li&gt;System: Linux (Familiar with Ubuntu)&lt;/li&gt;
  &lt;li&gt;Languages:&lt;/li&gt;
  &lt;li&gt;Major:  Chinese&lt;/li&gt;
  &lt;li&gt;Second: English&lt;/li&gt;
  &lt;li&gt;Familiar with TCP/IP, OpenFlow protocol, SDN.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;project-experience&quot;&gt;Project Experience&lt;/h1&gt;

&lt;h1 id=&quot;additional-skills&quot;&gt;Additional Skills&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;Leadership&lt;/li&gt;
  &lt;li&gt;Teamwork&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;hobbies&quot;&gt;Hobbies&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;Programming&lt;/li&gt;
  &lt;li&gt;Improvisational theater&lt;/li&gt;
  &lt;li&gt;Table tennis&lt;/li&gt;
  &lt;li&gt;
    &lt;h2 id=&quot;photography&quot;&gt;Photography&lt;/h2&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;刘威&quot;&gt;刘威&lt;/h1&gt;

&lt;p&gt;北京邮电大学•信息与通信工程学院•通信工程&lt;/p&gt;

&lt;p&gt;Email:liuwei201607@gmail.com&lt;/p&gt;

&lt;p&gt;Github: https://github.com/xff2016&lt;/p&gt;

&lt;p&gt;Homepage:http://xff2016.club&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;教育经历&quot;&gt;教育经历&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;大学本科（2012.9至今）&lt;/p&gt;

    &lt;p&gt;北京邮电大学 信息与通信工程学院 通信工程&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;实习经历&quot;&gt;实习经历&lt;/h1&gt;

&lt;h1 id=&quot;项目经历&quot;&gt;项目经历&lt;/h1&gt;

&lt;h1 id=&quot;所获奖励&quot;&gt;所获奖励&lt;/h1&gt;

&lt;p&gt;#个人技能&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;编程语言：Java(70%),C/C++(20%)，Python(10%)。&lt;/li&gt;
  &lt;li&gt;熟悉操作系统运行过程，熟悉Linux系统。&lt;/li&gt;
  &lt;li&gt;通过CET-6，英文文档阅读能力和演讲能力良好,口语流畅。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;#社会实践&lt;/p&gt;

&lt;p&gt;#兴趣爱好&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;My Blog Designed by [X-Flowing]
[X-Flowing]:    http://xff2016.club  “X-Flowing”&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 30 Jul 2015 00:00:00 +0800</pubDate>
        <link>http://xff2016.top/opinion/2015/07/30/About-Me.html</link>
        <guid isPermaLink="true">http://xff2016.top/opinion/2015/07/30/About-Me.html</guid>
        
        <category>随笔</category>
        
        <category>简历</category>
        
        
        <category>opinion</category>
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://github.com/jekyll/jekyll-help&quot;&gt;Jekyll’s dedicated Help repository&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Mon, 09 Mar 2015 06:21:49 +0800</pubDate>
        <link>http://xff2016.top/jekyll/update/2015/03/09/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">http://xff2016.top/jekyll/update/2015/03/09/welcome-to-jekyll.html</guid>
        
        <category>笔记</category>
        
        
        <category>Jekyll</category>
        
        <category>Update</category>
        
      </item>
    
      <item>
        <title>OverAPI</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://overapi.com  (OverAPI - Collecting all the cheat sheets)&quot;&gt;OverAPI&lt;/a&gt;是一个从我自己的需求出发，搭建起来的项目。项目结构很简单，将常用语言的API很扁平的展现出来，方便翻阅和查找。&lt;/p&gt;

&lt;p&gt;Chrome插件下载：&lt;a href=&quot;https://chrome.google.com/webstore/detail/oedodeocfdeegliepeeoieemhdgoijod?hl=zh-CN&quot; title=&quot;All Cheat Sheets&quot;&gt;All Cheat Sheets&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://overapi.com&quot; title=&quot;OverAPI - Collecting all the cheat sheets&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/overapi/overapi.jpg&quot; alt=&quot;OverAPI&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;生活在继续，遇到的人和事越来越繁杂，于是，满目的秋意、愉悦的欢叫，都像微风一样，带来的是美妙的简单。&lt;/p&gt;

&lt;p&gt;我们总想拥有一切，可一切到底有多少，就像诺兰的处女作&lt;a href=&quot;http://movie.douban.com/subject/1397546/&quot; title=&quot;Following&quot;&gt;Following&lt;/a&gt;中表现的一样，一些物品只有在失去时才知道他存在过。&lt;/p&gt;

&lt;p&gt;人生有目标才能前进，无论这个目标能否实现，OverAPI的目标是拥有一切，如果你有兴趣一起实现，可以联系我。&lt;/p&gt;

&lt;p&gt;现在已经有：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://overapi.com/python/&quot;&gt;Python Cheat Sheet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://overapi.com/jquery/&quot;&gt;jQuery Cheat Sheet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://overapi.com/nodejs/&quot;&gt;NodeJS Cheat Sheet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://overapi.com/php/&quot;&gt;PHP Cheat Sheet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://overapi.com/ruby/&quot;&gt;Ruby Cheat Sheet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://overapi.com/javascript/&quot;&gt;Javascript Cheat Sheet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://overapi.com/actionscript/&quot;&gt;ActionScript Cheat Sheet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://overapi.com/css/&quot;&gt;CSS Cheat Sheet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://overapi.com/git/&quot;&gt;Git Cheat Sheet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://overapi.com/svn/&quot;&gt;SVN Cheat Sheet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://overapi.com/mysql/&quot;&gt;MySQL Cheat Sheet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://overapi.com/regex/&quot;&gt;Regex Cheat Sheet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://overapi.com/linux/&quot;&gt;Linux Cheat Sheet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://overapi.com/html/&quot;&gt;HTML Cheat Sheet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://overapi.com/html-dom/&quot;&gt;HTML-DOM Cheat Sheet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://overapi.com/mod_rewrite/&quot;&gt;mod_rewrite Cheat Sheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Tue, 04 Sep 2012 06:21:49 +0800</pubDate>
        <link>http://xff2016.top/project/2012/09/04/overapi-cheatsheet.html</link>
        <guid isPermaLink="true">http://xff2016.top/project/2012/09/04/overapi-cheatsheet.html</guid>
        
        <category>笔记</category>
        
        
        <category>project</category>
        
      </item>
    
  </channel>
</rss>
